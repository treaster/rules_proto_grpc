load("@rules_proto_grpc//:defs.bzl", "proto_plugin")
load("@rules_python//python/pip_install:requirements.bzl", "compile_pip_requirements")

compile_pip_requirements(
    name = "requirements",
    extra_args = [
        "--generate-hashes",
    ],
    requirements_in = "requirements.in",
    requirements_txt = "requirements.txt",
    tags = [
        "manual",
    ],
)

proto_plugin(
    name = "proto_plugin",
    exclusions = [
        "google/protobuf",
    ],
    extra_protoc_args=["--pyi_out={package_dir}"],
    outputs = [
        "{protopath|python}_pb2.py",
        "{protopath|python}_pb2.pyi",
    ],
    protoc_plugin_name = "python",
    visibility = ["//visibility:public"],
)

proto_plugin(
    name = "grpc_plugin",
    exclusions = [
        "google/protobuf",
    ],
    extra_protoc_args=["--pyi_out={package_dir}"], # <-- what --flag goes here?? Something like --grpc-pyi_out??
    outputs = [
        "{protopath|python}_pb2_grpc.py",
        "{protopath|python}_pb2_grpc.pyi",
    ],
    tool = "@grpc//src/compiler:grpc_python_plugin",  # <-- here we use "tool", above we use "protoc_plugin_name"...
    visibility = ["//visibility:public"],
)

proto_plugin(
    name = "grpclib_plugin",
    extra_protoc_args=["--pyi_out={package_dir}"], # <-- what --flag goes here?? Something like --grpc-pyi_out??
    outputs = [
        "{protopath}_grpc.py",
        "{protopath}_grpc.pyi",
    ],
    tool = "//grpclib:plugin",  # <-- here we use "tool", above we use "protoc_plugin_name"...
    visibility = ["//visibility:public"],
)
